stages:
  - commit
  - acceptance
  - deploy

variables:
  TAG: $ECR_REPOSITORY/rose_api

.client_setup: &client_setup
  image: node:20-alpine
  before_script:
    - cd rose-client
    - npm install

ASSUME_ROLE:
  stage: commit
  image:
    name: amazon/aws-cli:latest
    entrypoint:
      - '/usr/bin/env'
  id_tokens:
    ID_TOKEN:
      aud: rose_directory
  script:
    - >
      STS=($(aws sts assume-role-with-web-identity
      --role-arn ${AWS_ROLE_ARN}
      --role-session-name "GitLabRunner-${CI_PROJECT_ID}-${CI_PIPELINE_ID}"
      --web-identity-token $ID_TOKEN
      --duration-seconds 3600
      --query 'Credentials.[AccessKeyId,SecretAccessKey,SessionToken]'
      --output text))
    - echo AWS_ACCESS_KEY_ID="${STS[0]}" >> build.env
    - echo AWS_SECRET_ACCESS_KEY="${STS[1]}" >> build.env
    - echo AWS_SESSION_TOKEN="${STS[2]}" >> build.env
  artifacts:
    reports:
      dotenv: build.env

CLIENT__BUILD:
  <<: *client_setup
  stage: commit
  script:
    - npm run build
  artifacts:
    paths:
      - rose-client/dist

CLIENT__TEST:
  <<: *client_setup
  stage: commit
  script:
    - npm run test

CLIENT__LINT:
  <<: *client_setup
  stage: commit
  script:
    - npm run lint

CLIENT__DEPLOY_STAGING:
  image:
    name: amazon/aws-cli:latest
    entrypoint:
      - '/usr/bin/env'
  stage: acceptance
  script:
    - aws s3 sync rose-client/dist s3://${S3_BUCKET}/staging/client
    - aws cloudfront create-invalidation --distribution-id ${STAGING_DISTRIBUTION_ID} --paths "/index.html"

CLIENT__DEPLOY_PRODUCTION:
  image:
    name: amazon/aws-cli:latest
    entrypoint:
      - '/usr/bin/env'
  stage: deploy
  rules:
    - if: $CI_COMMIT_BRANCH == "production"
  script:
    - aws s3 sync rose-client/dist s3://${S3_BUCKET}/production/client
    - aws cloudfront create-invalidation --distribution-id ${PRODUCTION_DISTRIBUTION_ID} --paths "/index.html"

API_BUILD:
  image: amazoncorretto:17
  stage: commit
  script:
    - cd rose-api/src/main/resources
    - echo "amazon.dynamodb.endpoint=dynamodb.us-east-1.amazonaws.com" > application.properties
    - ./gradlew build -x test
  artifacts:
    paths:
      - rose-api/build/libs

API_CONTAINER:
  image: docker:24.0.5
  services:
    - docker:24.0.5-dind
  stage: deploy
  before_script:
    - apk add --no-cache aws-cli
    - aws ecr get-login-password | docker login $ECR_REPOSITORY -u AWS --password-stdin
    - cd rose-api
  script:
    - docker build -t $TAG .
    - docker push $TAG
    - aws ecs update-service --cluster $CLUSTER --service $ECS_SERVICE --force-new-deployment
